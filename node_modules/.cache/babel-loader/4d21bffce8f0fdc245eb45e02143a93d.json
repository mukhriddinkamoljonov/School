{"ast":null,"code":"import { getWindow } from 'ssr-window';\nexport default function History(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides'\n    }\n  });\n  let initialized = false;\n  let paths = {};\n\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n\n    const slide = swiper.slides.eq(index);\n    let value = slugify(slide.attr('data-history'));\n\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key}/${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n\n    const currentState = window.history.state;\n\n    if (currentState && currentState.value === value) {\n      return;\n    }\n\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = slugify(slide.attr('data-history'));\n\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, swiper.paths.value, false);\n  };\n\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) return;\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  const destroy = () => {\n    const window = getWindow();\n\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","map":{"version":3,"names":["getWindow","History","_ref","swiper","extendParams","on","history","enabled","root","replaceState","key","initialized","paths","slugify","text","toString","replace","getPathValues","urlOverride","window","location","URL","pathArray","pathname","slice","split","filter","part","total","length","value","setHistory","index","params","url","slide","slides","eq","attr","includes","currentState","state","pushState","scrollToSlide","speed","runCallbacks","i","slideHistory","hasClass","slideDuplicateClass","slideTo","setHistoryPopState","init","hashNavigation","runCallbacksOnInit","addEventListener","destroy","removeEventListener","activeIndex","cssMode"],"sources":["C:/Users/Lenovo/Desktop/Decent-Travel/node_modules/swiper/modules/history/history.js"],"sourcesContent":["import { getWindow } from 'ssr-window';\nexport default function History(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides'\n    }\n  });\n  let initialized = false;\n  let paths = {};\n\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n\n    const slide = swiper.slides.eq(index);\n    let value = slugify(slide.attr('data-history'));\n\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key}/${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n\n    const currentState = window.history.state;\n\n    if (currentState && currentState.value === value) {\n      return;\n    }\n\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = slugify(slide.attr('data-history'));\n\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, swiper.paths.value, false);\n  };\n\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) return;\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  const destroy = () => {\n    const window = getWindow();\n\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}